plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.0'
    id 'io.spring.dependency-management' version '1.1.3'
//    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.kh'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Security
    implementation "org.springframework.boot:spring-boot-starter-security"

    // Security Token 관련 JJWT
    implementation "io.jsonwebtoken:jjwt-api:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.11.5"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.11.5"

    // 이메일 보내기 관련
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // 랜덤 비밀번호(문자 + 숫자)를 생성하기 위한 RandomStringUtils 클래스를 사용하기 위한 commsons-lang 라이브러리를 추가해줌
    implementation 'org.apache.commons:commons-lang3:3.12.0'

}

tasks.named('test') {
    useJUnitPlatform()
}

// QueryDSL 관련 여기부터 추가
//def generated = 'src/main/generated'
//
//clean {
//	delete file (generated)
//}
//
//querydsl {
//library = "com.querydsl:querydsl-apt:5.0.0" // 사용할 AnnotationProcessor 정의
//	jpa = true
//	querydslSourcesDir = generated
//}
//sourceSets {
//	main.java.srcDir generated
//}
//
//// complieQuerydsl Task에 clean 동작 추가
//tasks.compileQuerydsl.dependsOn(clean);
//
//compileQuerydsl{
//	options.annotationProcessorPath = configurations.querydsl
//}
//
//configurations {
//	querydsl.extendsFrom compileClasspath
//}
//
//configurations {
//	compileOnly {
//		extendsFrom annotationProcessor
//	}
//	querydsl.extendsFrom compileClasspath
//}
